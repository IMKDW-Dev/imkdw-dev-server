name: IMKDW-Dev CI
on:
  push:
    branches:
      - develop
      - chore/ci
  pull_request:
    branches:
      - develop
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Setup Node.js v20
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Setup pnpm v8
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install Production Dependencies
        run: pnpm i -P

      - name: Generate Prisma Types
        run: npx prisma generate

      - name: Build Project
        run: pnpm build

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Setup Node.js v20
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Setup pnpm v8
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install Dependencies
        run: pnpm i

      - name: Lint Project
        run: pnpm lint

  unit-test:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Setup Node.js v20
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Setup pnpm v8
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install Dependencies
        run: pnpm i

      - name: Test Project
        run: pnpm test:unit

  integration-test:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: mysql://root:1234@localhost:3306/test
    steps:
      - uses: mirromutth/mysql-action@v1.1
        with:
          host port: 3306
          character set server: 'utf8'
          collation server: 'utf8_general_ci'
          mysql version: '8.0'
          mysql database: 'test'
          mysql root password: 1234
          mysql user: 'root'
          mysql password: 1234

      - name: checkout
        uses: actions/checkout@v3

      - name: Setup Node.js v20
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Setup pnpm v8
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install Dependencies
        run: pnpm i

      - name: Generate Prisma Types
        run: npx prisma db push

      - name: Seeding Database
        run: npx prisma db seed

      - name: Test Project
        run: pnpm test:integration

  e2e-test:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: mysql://root:1234@localhost:3307/test
    steps:
      - uses: mirromutth/mysql-action@v1.1
        with:
          host port: 3307
          character set server: 'utf8'
          collation server: 'utf8_general_ci'
          mysql version: '8.0'
          mysql database: 'test'
          mysql root password: 1234
          mysql user: 'root'
          mysql password: 1234

      - name: checkout
        uses: actions/checkout@v3

      - name: Setup Node.js v20
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Setup pnpm v8
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install Dependencies
        run: pnpm i

      - name: Generate Prisma Types
        run: npx prisma db push

      - name: Seeding Database
        run: npx prisma db seed

      - name: Test Project
        run: pnpm test:e2e

  alert:
    needs: [build, lint, unit-test, integration-test, e2e-test]
    runs-on: ubuntu-latest
    steps:
      - name: Push CI Result on Slack
        uses: 8398a7/action-slack@v3
        with:
          author_name: '[SERVER] IMKDW DEV CI Result'
          status: ${{ job.status }}
          fields: repo,message,author
          text: ${{ steps.set_text.outputs.text }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
