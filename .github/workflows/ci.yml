name: IMKDW-Dev CI
on:
  pull_request:
    branches:
      - develop
    types: [opened, reopened]

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_IAM_ACCESS_KEY: ${{ secrets.AWS_IAM_ACCESS_KEY }}
  AWS_IAM_SECRET_ACCESS_KEY: ${{ secrets.AWS_IAM_SECRET_ACCESS_KEY }}
  NODE_ENV: test
  GOOGLE_GET_USER_INFO_API: ${{ secrets.GOOGLE_GET_USER_INFO_API }}
  KAKAO_GET_ACCESS_TOKEN_API: ${{ secrets.KAKAO_GET_ACCESS_TOKEN_API }}
  KAKAO_GET_USER_INFO_API: ${{ secrets.KAKAO_GET_USER_INFO_API }}
  KAKAO_CLIENT_ID: ${{ secrets.KAKAO_CLIENT_ID }}
  OAUTH_GITHUB_GET_ACCESS_TOKEN_API: ${{ secrets.OAUTH_GITHUB_GET_ACCESS_TOKEN_API }}
  OAUTH_GITHUB_GET_USER_INFO_API: ${{ secrets.OAUTH_GITHUB_GET_USER_INFO_API }}
  OAUTH_GITHUB_CLIENT_ID: ${{ secrets.OAUTH_GITHUB_CLIENT_ID }}
  OAUTH_GITHUB_CLIENT_SECRET: ${{ secrets.OAUTH_GITHUB_CLIENT_SECRET }}
  JWT_SECRET: test
  JWT_ACCESS_TOKEN_EXPIRES_IN: ${{ secrets.JWT_ACCESS_TOKEN_EXPIRES_IN }}
  JWT_REFRESH_TOKEN_EXPIRES_IN: ${{ secrets.JWT_REFRESH_TOKEN_EXPIRES_IN }}
  S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
  S3_BUCKET_URL: ${{ secrets.S3_BUCKET_URL }}
  S3_PRESIGNED_URL_EXPIRES_IN: ${{ secrets.S3_PRESIGNED_URL_EXPIRES_IN }}
  S3_PRESIGNED_BUCKET_NAME: ${{ secrets.S3_PRESIGNED_BUCKET_NAME }}
  S3_PRESIGNED_BUCKET_URL: ${{ secrets.S3_PRESIGNED_BUCKET_URL }}
  CLOUDWATCH_LOG_GROUP_NAME: ${{ secrets.CLOUDWATCH_LOG_GROUP_NAME }}
  SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
  SLACK_CHANNEL_ERROR: ${{ secrets.SLACK_CHANNEL_ERROR }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - run: pnpm i -P
      - run: npx prisma generate
      - run: pnpm build
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist
          if-no-files-found: error

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - run: pnpm i
      - run: pnpm lint

  unit-test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/download-artifact@v3
        with:
          name: dist
      - run: pnpm test:unit
        continue-on-error: false

  integration-test:
    runs-on: ubuntu-latest
    needs: build
    env:
      DATABASE_URL: mysql://root:1234@localhost:3306/test
    steps:
      - uses: mirromutth/mysql-action@v1.1
        with:
          host port: 3306
          character set server: 'utf8'
          collation server: 'utf8_general_ci'
          mysql version: '8.0'
          mysql database: 'test'
          mysql root password: 1234
          mysql user: 'root'
          mysql password: 1234

      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/download-artifact@v3
        with:
          name: dist
      - run: pnpm test:integration
        continue-on-error: false

  e2e-test:
    runs-on: ubuntu-latest
    needs: build
    env:
      DATABASE_URL: mysql://root:1234@localhost:3307/test
    steps:
      - uses: mirromutth/mysql-action@v1.1
        with:
          host port: 3307
          character set server: 'utf8'
          collation server: 'utf8_general_ci'
          mysql version: '8.0'
          mysql database: 'test'
          mysql root password: 1234
          mysql user: 'root'
          mysql password: 1234

      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/download-artifact@v3
        with:
          name: dist
      - run: pnpm test:e2e
        continue-on-error: false

  alert:
    needs: [build, lint, unit-test, integration-test, e2e-test]
    runs-on: ubuntu-latest
    steps:
      - name: Push CI Result on Slack
        uses: 8398a7/action-slack@v3
        with:
          author_name: '[SERVER] IMKDW DEV CI Result'
          status: ${{ job.status }}
          fields: repo,message,author
          text: ${{ steps.set_text.outputs.text }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
